<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="message">
	<select id="selectMsgList" resultType="message">
		select
			*
		from
			message
		where
		<choose>

			<when test="type == 'receive'">
				receiver_id =#{memberId} and receiver_del_yn='N'
			</when>

			<when test="type == 'send'">

				sender_id = #{memberId} and sender_del_yn = 'N'

			</when>

			<otherwise>

				(sender_id = #{memberId} and sender_del_yn = 'N') or (receiver_id =#{memberId}
		and receiver_del_yn='N')

			</otherwise>

		</choose>
		order by no desc
		
	</select>
	<select id="selectMessageOne" resultType="message">
		select
		 m.*,l.vaild_yn
from
    message m left outer join (
                            select * from
                                report_log
                            where content_category = 'M'
                            ) l on m.no = l.content_id
where m.no=#{no}
	</select>
	<select  id="selectMessageNextOne" resultType="message">
	 <![CDATA[ 
		select *
		from (
    		select *
    		from message
    		where no < #{no} 
    		and ((sender_id = #{memberId} and sender_del_yn = 'N') or (receiver_id =#{memberId}and receiver_del_yn='N'))
    		order by no desc
    		)
		where
    	rownum =1
    	]]> 
	</select>
	<update id="deleteMessageList">
		
			update message 
			<set>
    			<if test="type == 'receive'">receiver_del_yn = 'Y'</if>
    			<if test="type == 'send'">sender_del_yn = 'Y'</if>
			</set>
    		where no in 
    		<foreach collection="arr" item="item" index="index" separator="," open="(" close=")">
	              #{item}
	           </foreach>

	</update>
	<update id="updateRead">
		update message
		set read_yn = 'Y'
		where no = #{no}
	</update>
	<insert id="insertMessage">
		insert into
		message
		values(
			seq_message_no.nextval,
			#{senderId},
			#{receiverId},
			#{msgContent},
			default,
			default,
			default,
			default
			
		)
		
	</insert>
	<select id="searchMessageList" resultType="message">
		select
			*
		from 
			message
		where
		<choose>
			<when test="keyword == 'content'">
				msg_content like '%'||#{searchContent}||'%'
			</when>
			<otherwise>
				(sender_id like '%'||#{searchContent}||'%' or receiver_id like '%'||#{searchContent}||'%')
			</otherwise>
		</choose>
		<choose>

			<when test="type == 'receive'">
				and receiver_id =#{memberId} and receiver_del_yn='N'
			</when>

			<when test="type == 'send'">

				and sender_id = #{memberId} and sender_del_yn = 'N'

			</when>

			<otherwise>

				and ((sender_id = #{memberId} and sender_del_yn = 'N') or (receiver_id =#{memberId}and receiver_del_yn='N'))

			</otherwise>
			</choose>
	</select>
</mapper>