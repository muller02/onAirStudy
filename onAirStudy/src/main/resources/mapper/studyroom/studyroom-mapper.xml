<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="studyroom">

<select id="selectsrList" resultType="studyroomlist">
select
	*
from
	sr_list 

</select>

<select id="selectMystudyList" resultMap="studyRoomMap">
select
        F.sr_no,
        F.sr_title,
        F.sr_comment,
        G.member_id,
        G.status_log,
        G.leader_yn,
        C.category,
        l.sr_category
from
    sr_info F left join sr_log G on  F.sr_no = G.sr_no
    left join sr_list L on F.sr_no = l.sr_no
    left join sr_category C on  l.sr_category = C.no
where 
    G.status_log='참여'
</select>

  <resultMap type="map" id="studyRoomMap">
  		<id column="sr_no" property="srNo"/>
  		<result column="sr_title" property="srTitle"/>
  		<result column="category" property="sCategory"/>
  		<result column="sr_comment" property="srComment"/>
  		<result column="member_id" property="memberId"/>
  		<result column="status_log" property="status"/>
  		<result column="leader_yn" property="sleader"/>
  	</resultMap>

<select id="selectMywaitingList" resultMap="waitingMap">
		select
  		A.*,
  		(select category
         from sr_category
         where no = L.sr_category) aCategory,
  		 (select sr_title
  		 from sr_info
  		 where sr_no = A.sr_no) aTitle,
  		 (select sr_comment
  		 from sr_info
  		 where sr_no = A.sr_no) aComment,
  		 (select sr_opened_yn
  		 from sr_list
  		 where sr_no = A.sr_no) aStatus
	from
    	sr_waiting_list A left join sr_list L
    on A.sr_no = L.sr_no
</select>
  <resultMap type="map" id="waitingMap">
  		<id column="sr_no" property="srNo"/>
  		<result column="no" property="no"/>
  		<result column="member_id" property="memberId"/>
  		<result column="atitle" property="aTitle"/>
  		<result column="acategory" property="aCategory"/>
  		<result column="acomment" property="aComment"/>
  		<result column="astatus" property="aStatus"/>
  	</resultMap>
  	
<select id="selectMywishList" resultMap="wishMap">
	select
  		W.*,  
        (select category
         from sr_category
         where no = L.sr_category) wCategory,
  		 (select sr_title
  		 from sr_info
  		 where sr_no = W.sr_no) wTitle,
  		 (select sr_comment
  		 from sr_info
  		 where sr_no = W.sr_no) wComment,
  		 (select sr_opened_yn
  		 from sr_list
  		 where sr_no = W.sr_no) wStatus
	from
    	sr_wish_list W left join sr_list L
    on W.sr_no = L.sr_no
</select>

  <resultMap type="map" id="wishMap">
  		<id column="sr_no" property="srNo"/>
  		<result column="no" property="no"/>
  		<result column="member_id" property="memberId"/>
  		<result column="wtitle" property="wTitle"/>
  		<result column="wcategory" property="wCategory"/>
  		<result column="wcomment" property="wComment"/>
  		<result column="wstatus" property="wStatus"/>
  	</resultMap>

<!-- 찾기 -->
<select id="listAll" resultMap="studyMap">
select
    L.*,
    sr_title s_title,
   (select    renamed_filename
    from   profile_attachment
    where sr_no =l.sr_no) sr_pic,
   (select    renamed_filename
    from   profile_attachment
    where member_id = L.member_id) m_pic,
    (select sr_no 
     from sr_wish_list
     where sr_no = L.sr_no) wish_no
 	from 
		sr_list L left outer join sr_info s on l.sr_no = s.sr_no  
<include refid="search"/> 
	order by
		sr_opened_yn desc
</select>

<sql id="search">
<choose>
<when test = "search_option =='all'">
where
	member_id like '%' ||#{keyword}|| '%'
	or sr_title like '%' ||#{keyword}|| '%' and
	L.sr_no>8 and
	sr_ended_yn != 'Y'
</when>
<when test="category != 0">
 where 
 	sr_category = #{category} and
    L.sr_no>8 and
	sr_ended_yn != 'Y'
</when>
<otherwise>
where
	${search_option} like '%' ||#{keyword}|| '%' and
	L.sr_no>8 and
	sr_ended_yn != 'Y'	
</otherwise>
</choose>
</sql>

<select id="countArticle" resultType="int">
select
    count(*)
from 
	sr_list L left join sr_info F on l.sr_no = F.sr_no
<include refid="search"/> 
</select>

<!-- 메인 스터디룸 리스트  -->

<select id="selectStudyRoomList" resultMap="studyMap">
select
       L.*,
  W.member_id w_id,
    (select     sr_title
    from    sr_info
    where sr_no =l.sr_no) s_title,
   (select    renamed_filename
    from   profile_attachment
    where sr_no =l.sr_no) sr_pic,
   (select    renamed_filename
    from   profile_attachment
    where member_id = L.member_id) m_pic
 	from 
		sr_list L left join sr_wish_list W on l.sr_no = W.sr_no
	where
		L.sr_no>8 and
		sr_ended_yn != 'Y'
	order by
		sr_opened_yn desc
</select>

  	<resultMap type="map" id="studyMap">
  		<id column="sr_no" property="srNo"/>
  		<result column="w_id" property="wId"/>
  		<result column="member_id" property="memberId"/>
  		<result column="sr_enroll_date" property="srEnrollDate"/>
  		<result column="sr_category" property="srCategory"/>
  		<result column="sr_headCnt" property="srHeadCnt"/>
  		<result column="sr_opened_yn" property="srOpenedYN"/>
  		<result column="sr_ended_yn" property="srEndedYN"/>
  		<result column="sr_sort" property="srSort"/>
  		<result column="s_title" property="sTitle"/>
  		<result column="sr_pic" property="srPic"/>
  		<result column="m_pic" property="mPic"/>
  		<result column="wish_no" property="wishNo"/>
  	
  	</resultMap>
  	
 <select id="selectMywish" resultType="StudyRoomWish">
 select
 	*
 from
 	sr_wish_list 	
 </select>

<select id="selectCategoryList" resultType="studycategory">

	select
		*
	from
		sr_category
    where
      no != 100
</select>

<!-- 방신청 -->

<insert id="insertWating">
insert 
	into sr_waiting_list 
values(
	seq_waiting_no.nextval, #{memberId}, #{srNo})
</insert>

<select id="selectApplyRoom" resultType="_int">
select
	count(*)
from 
	sr_waiting_list
where
	member_id = #{memberId} and sr_no = #{srNo}

</select>

<delete id="deleteApply">
delete from
	sr_waiting_list 
where
	sr_no = #{srNo} and member_id = #{memberId}

</delete>

<select id="selectMyStudy" resultType="_int">
select
	count(*)
from 
	sr_log
where
	member_id = #{memberId} and sr_no = #{srNo}

</select>


<!-- 찜 목록  -->
<select id="selectCheckWish" resultType="_int">
select
	count(*)
from 
	sr_wish_list 
where
	member_id = #{memberId} and sr_no = #{srNo}
</select>

<insert id="insertWish">
insert 
	into sr_wish_list 
values(
	seq_wish_no.nextval, #{memberId}, #{srNo})

<!--  where not exists
 (select sr_no from sr_wish_list where sr_no == #{srNo}) -->
</insert>

<delete id="deleteWish">
delete from
	sr_wish_list 
where
	sr_no = #{srNo} and member_id = #{memberId}

</delete>

<!-- 방생성  -->

<insert id="insertStudyRoomList">

insert into 
	sr_list 
values (
	seq_sr_list_no.nextval, #{memberId}, default, #{srCategory}, default, default, 'P')
<selectKey order="AFTER" resultType="_int" keyProperty="srNo">
			select
				seq_sr_list_no.currval
			from 
				dual
</selectKey>

</insert>

<insert id="insertProfileAttachment">
insert into 
	profile_attachment 
values(
	seq_profile_no.nextval, null, #{srNo}, #{originalFilename}, #{renamedFilename}, #{filePath})
</insert>

<insert id="insertStudyRoom">

insert into 
	sr_info 
values(
	#{srNo}, 
	#{srTitle}, 
	default, 
	#{srComment}, 0, 0, '-', '-', 0, 'N')
	
</insert>

<insert id="insertStudyRoomLog">
insert 
	into sr_log 
values(
	seq_sr_log_no.nextval, #{srNo}, #{memberId}, '참여', 0, 'Y')
</insert>

<select id="selectStudyRoomLog" resultType="Map">
select*
from sr_log
</select>

<!-- 생성   -->


<!-- 성실스터디방 List -->
	<select id="selectDilgentStudyroom" resultMap="studyRoomMap">
	  select I.*,
	    (select     member_id
	    from    sr_list
	    where sr_no =I.sr_no) member_id,
	    (select    renamed_filename
	    from   profile_attachment
	    where sr_no =I.sr_no) sr_pic,
	   (select    renamed_filename
	    from   profile_attachment
	    where sr_no = I.sr_no) m_pic
	from sr_info I
	<![CDATA[  
		where sr_ranking >=1 and sr_ranking <= 5
		]]>

		
	</select>
	
	<!-- 회원가입시 -->
	<insert id="insertMemberToSr">
		insert into 
			sr_log 
		values(
			seq_sr_log_no.nextval, 
			#{srNo}, 
			#{memberId}, 
			'참여', 
			0, 
			'N'
		)
	</insert>


	<select id="selectParticipantList" resultType="studyroomlog">
	
		select 
			* 
		from 
			sr_log 
		where 
			sr_no = #{roomNum} 
		and 
			status_log  = '참여'
		order by 
			no
	</select>
	
	<select id="selectApplicantList" resultType="string">
	
		select 
			member_id
		from 
			sr_waiting_list
		where 
			sr_no = #{ roomNum}
	</select>


	<select id="selectRoomInfo" resultMap="roomInfoMap">
		select 
		    I.* ,  L.sr_opened_yn,  c.category
		from 
		    sr_list L 
		        left join sr_category C on l.sr_category= C.no
		        left join sr_info I on l.sr_no = i.sr_no
		where i.sr_no = #{roomNum}
		order by L.sr_no
	
	</select>
	
	<resultMap type="studyroominfo" id="roomInfoMap">
  		<id column="sr_no" property="srNo"/>
  		<result column="sr_title" property="srTitle"/>
  		<result column="sr_goal" property="srGoal"/>
  		<result column="sr_comment" property="srComment"/>
  		<result column="sr_attendance_cnt" property="attendanceCnt"/>
  		<result column="attend_day" property="attendDay"/>
  		<result column="attend_time" property="attendTime"/>
  		<result column="sr_ranking" property="ranking"/>
  		<result column="forced_exit_opt" property="forceExitOpt"/>
  		<result column="forced_exit_yn" property="forceExitYN"/>
  		<result column="sr_opened_yn" property="srOpenedYN"/>
  		<result column="category" property="category"/>
  	</resultMap>

	<insert id="insertStudyLog">
		insert into 
			sr_log 
		values(
			seq_sr_log_no.nextval ,
			#{ roomNum },
			#{ memberId },
			'참여',
			0 ,
			'N'
		)
	</insert>

	<insert id="insertAttendance">
		insert into 
			attendance 
		values(
			seq_attendance_no.nextval ,
			#{roomNum} ,
			#{memberId} ,
			default ,
			default
		)
	</insert>
	
	<delete id="deleteWaiting">
		delete from
			sr_waiting_list
		where
			member_id = #{memberId}
		and 
			sr_no = #{roomNum}	
	</delete>
	
	<select id="selectParticipatingRoomCnt" resultType="_int">
		select 
			count(*) 
		from 
			sr_log 
		where 
			member_id = #{memberId} 
		and 
			status_log = '참여'
	</select>
	
	<delete id="deleteMemberAttend">
		delete from 
			attendance 
		where 
			member_id = #{memberId} 
		and 
			sr_no = #{srNo}
	</delete>


	<select id="selectNextLeader" resultType="string">
		select 
			member_id 
		from (
		    select rownum, sr_log.*
		    from sr_log
		    where sr_no = #{srNo} 
		    and sr_log.status_log = '참여'
		    order by no
		) 
		where rownum = 1
	</select>
	
		<update id="updateLeader">
		update 
			sr_log 
		set  
			leader_yn = 'Y' 
		where 
			member_id = '${memberId}' 
		and 
			sr_no = #{srNo}
	</update>
	
	<update id="withdraw">
		update 
			sr_log 
		set 
			status_log = '나가기' 
		where 
			member_id = #{memberId} 
		and 
			sr_no = #{srNo}
	</update>
	
	
	<update id="updateLog">
		update 
			sr_log
		set 
			status_log = '나가기',
			leader_yn = 'N' 
		where 
			member_id = #{memberId} 
		and 
			sr_no = #{srNo}
	</update>
	
	<update id="updateRoomInfo">
		update 
			sr_info 
		set 
			sr_title = #{srTitle} , 
			sr_goal = #{srGoal} , 
			sr_comment = #{srComment} , 
			attend_day = #{ attendDay} , 
			attend_time = #{attendTime} , 
			forced_exit_opt = #{ forceExitOpt} , 
			forced_exit_yn = #{ forceExitYN }
		where 
			sr_no = #{srNo}
	</update>
	
	<update id="updateRoomOpenedYN">
		update
			sr_list
		set
			sr_opened_yn = #{srOpenedYN}
		where
			sr_no = ${srNo}
	</update>
</mapper>